# Generated by Django 4.1 on 2024-05-13 02:40

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name', max_length=200, unique=True, verbose_name='Name')),
                ('Email', models.CharField(default='', help_text='Emain', max_length=20, verbose_name='Email')),
                ('Administrative_office', models.CharField(default='', help_text='Administrative office', max_length=20, verbose_name='Administrative office')),
                ('Curriculum_vitae', models.TextField(blank=True, default='', help_text='Curriculum vitae', max_length=200, null=True, verbose_name='Curriculum vitae')),
            ],
            options={
                'verbose_name': 'Doctor',
                'verbose_name_plural': 'Doctor',
                'db_table': 'doctor_projects',
            },
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('telephone', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('address', models.CharField(max_length=255)),
                ('contact_info', models.JSONField()),
            ],
            options={
                'db_table': 'user_list',
            },
        ),
        migrations.CreateModel(
            name='Medicalrecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Historical_visit_time', models.DateField(default='', help_text='Historical visit time', max_length=200, unique=True, verbose_name='PHistorical visit time')),
                ('Historical_medical_record', models.TextField(blank=True, default='', help_text='Historical medical record', max_length=200, null=True, verbose_name='Historical medical record')),
                ('Latest_visit_time', models.DateField(default='', help_text='Latest visit time', max_length=20, verbose_name='Latest visit time')),
                ('Latest_medical_records', models.TextField(blank=True, default='', help_text='Latest medical records', max_length=200, null=True, verbose_name='Latest medical records')),
            ],
            options={
                'db_table': 'medicalrecord',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name', max_length=200, unique=True, verbose_name='Name')),
                ('Email', models.CharField(help_text='Emain', max_length=20, verbose_name='Email')),
                ('date_of_birth', models.DateField(help_text='Date of birth', max_length=20, verbose_name='Date of birth')),
                ('Doctor_appointment', models.CharField(help_text='Doctor appointment', max_length=20, verbose_name='Doctor appointment')),
                ('Time_appointment', models.CharField(help_text='Time appointment', max_length=20, verbose_name='Time appointment')),
                ('Registered_department', models.CharField(help_text='Registered department', max_length=20, verbose_name='Registered department')),
                ('Disease_history', models.TextField(blank=True, default='', help_text='medical history', max_length=200, null=True, verbose_name='medical history')),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patient',
                'db_table': 'patient_projects',
            },
        ),
        migrations.CreateModel(
            name='Pharmacy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Drug_name', models.CharField(help_text='Drug name', max_length=200, unique=True, verbose_name='Drug name')),
                ('Drug_price', models.CharField(help_text='Drug price', max_length=20, verbose_name='Drug price')),
                ('Shelf_life', models.DateField(help_text='Shelf life', max_length=20, verbose_name='Shelf life')),
                ('Pieces_in_stock', models.CharField(help_text='Pieces in stock', max_length=20, verbose_name='Pieces in stock')),
                ('Specification', models.TextField(blank=True, default='', help_text='Specification', max_length=200, null=True, verbose_name='Specification')),
            ],
            options={
                'verbose_name': 'Pharmacy',
                'verbose_name_plural': 'Pharmacy',
                'db_table': 'pharmacy_projects',
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Responsible_doctor', models.CharField(help_text='Responsible doctor', max_length=20, verbose_name='Responsible doctor')),
                ('Patient_name', models.CharField(help_text='Patient name', max_length=20, verbose_name='Patient name')),
                ('Prescription_time', models.DateField(help_text='Prescription time', max_length=200, unique=True, verbose_name='Prescription time')),
                ('Prescription_content', models.TextField(blank=True, default='', help_text='Prescription content', max_length=200, null=True, verbose_name='Prescription content')),
            ],
            options={
                'verbose_name': 'Prescription',
                'verbose_name_plural': 'Prescription',
                'db_table': 'prescription_projects',
            },
        ),
    ]
